{
  "posts": [
    {
      "id": "fd08ab72-886a-4861-aea9-ac65ca26cf14",
      "title": "Practical Micro Frontends: Building Scalable UIs",
      "author": "Pin Nguyen",
      "createdAt": 1732519037788,
      "updatedAt": 1732519037788,
      "slug": "",
      "publishedDate": "2024-06-15T03:00:00Z",
      "tagList": ["Design", "Pattern"],
      "description": "This post explores how to implement micro frontends by breaking down monolithic UIs into smaller, manageable pieces. Using tools like React, Webpack, and Module Federation, you'll learn how to create scalable, maintainable front-end applications that enhance team collaboration and project flexibility."
    },
    {
      "id": "06a6d004-8153-43f1-9248-7a06d8295827",
      "title": "Large Language Model (LLM) & Chatbox",
      "author": "Pin Nguyen",
      "createdAt": 1732519037788,
      "updatedAt": 1732519037788,
      "slug": "",
      "publishedDate": "2024-06-16T03:00:00Z",
      "tagList": ["AI", "Mechine Learning"],
      "description": "This is a model that provides a general introduction to AI chatbots, large language models (LLMs), how to apply them in the workplace, essential knowledge about AI and prompts, their advantages and disadvantages, key terms related to LLMs, and tools that help enhance productivity for developers."
    }
  ],
  "works": [
    {
      "id": "258dfeec-f990-40b4-a8ed-91720aeac7e9",
      "title": "Game tic tac toe",
      "status": "published",
      "slug": "game-tic-tac-toe",
      "frontEndTagList": ["TypeScript to handle game logic", "MUI to style the game board"],
      "thumbnailUrl": "https://plus.unsplash.com/premium_photo-1673735396428-d51dc2a7a62d?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1yZWxhdGVkfDV8fHxlbnwwfHx8fHw%3D",
      "tagList": ["Game", "Web", "TypeScript"],
      "fullDescription": "A TypeScript Tic-Tac-Toe game where players take turns marking The <span style=\"font-weight: 700; font-style: italic;\">X and O on a 3x3 grid</span>, with the winner determined by three aligned marks",
      "createdAt": "1722091716231",
      "updatedAt": "1722091716231",
      "linkDemo": "",
      "linkSource": "",
      "shortDescription": "A TypeScript Tic-Tac-Toe game where players take turns marking The <span style=\"font-weight: 700; font-style: italic;\">X and O on a 3x3 grid</span>, with the winner determined by three aligned marks"
    },
    {
      "id": "2feaafad-7086-45ce-9f9d-515a7e7d6ba3",
      "title": "Game Color Matching",
      "slug": "game-color-matching",
      "status": "published",
      "frontEndTagList": ["TypeScript to handle game logic", "MUI to style the game board"],
      "thumbnailUrl": "https://plus.unsplash.com/premium_photo-1681843681830-7d4b70a435c1?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NXx8Y29sb3J8ZW58MHx8MHx8fDA%3D",
      "tagList": ["Game", "Web", "TypeScript"],
      "fullDescription": "",
      "createdAt": "1722091716231",
      "updatedAt": "1722091716231",
      "linkDemo": "",
      "linkSource": "",
      "shortDescription": "A TypeScript-based Color Matching game where players swap tiles to align three or more of the same color, with increasing difficulty and challenges as they progress."
    },
    {
      "id": "a4467850-b6b9-4597-9725-787878d6ac9e",
      "title": "Twitter-Node-Server",
      "status": "draft",
      "slug": "twitter-node-server",
      "frontEndTagList": [
        "React components with TypeScript for UI development",
        "NextJS for server-side rendering, ISR, and static site generation",
        "useSWR for state management"
      ],
      "backEndTagList": [
        "NodeJS for server-side development",
        "Docker for containerization",
        "GitHub Action for continuous integration and deployment",
        "JSON Server for to build fake APIs",
        "ExpressJS to configure routes and handle requests"
      ],
      "dbTagList": ["MongoDB for data storage", "AWS for cloud storage"],
      "thumbnailUrl": "https://images.unsplash.com/photo-1611162618479-ee3d24aaef0b?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OHx8VHdpdHRlcnxlbnwwfHwwfHx8MA%3D%3D",
      "tagList": ["NodeJS", "MongoDB", "Docker", "GitHub Action", "JSON Server"],
      "fullDescription": "The <span style=\"font-weight: 700; font-style: italic;\">Twitter-Node-Server</span> application integrates with the Twitter API to fetch and display tweets. It allows users to interact with Twitter data, providing a backend service for managing and retrieving tweets efficiently.",
      "createdAt": "1722091716231",
      "updatedAt": "1722091716231",
      "linkDemo": "",
      "linkSource": "",
      "shortDescription": "The <span style=\"font-weight: 700; font-style: italic;\">Twitter-Node-Server</span> application integrates with the Twitter API to fetch and display tweets. It allows users to interact with Twitter data, providing a backend service for managing and retrieving tweets efficiently."
    },
    {
      "id": "6bc7c512-64a9-4020-a418-ede8392c0293",
      "title": "Dashboard",
      "status": "draft",
      "slug": "dashboard",
      "frontEndTagList": [
        "React components with TypeScript for UI development",
        "NextJS for server-side rendering, ISR, and static site generation",
        "useSWR for state management"
      ],
      "backEndTagList": ["NodeJS to handle server-side logic"],
      "dbTagList": ["MongoDB to store data"],
      "thumbnailUrl": "https://media.istockphoto.com/id/1292897536/vi/vec-to/b%E1%BA%A3ng-%C4%91i%E1%BB%81u-khi%E1%BB%83n-%C4%91%E1%BB%93-h%E1%BB%8Da-th%C3%B4ng-tin-giao-di%E1%BB%87n-ng%C6%B0%E1%BB%9Di-d%C3%B9ng-%C4%91%E1%BB%93-h%E1%BB%8Da-d%E1%BB%AF-li%E1%BB%87u-v%C3%A0-bi%E1%BB%83u-%C4%91%E1%BB%93-s%C3%A0ng-l%E1%BB%8Dc.jpg?s=612x612&w=0&k=20&c=w1zIeckEvKHq8IohmsCOOQdAkoM4-aQHP0SX0uu1SeE=",
      "tagList": ["Web", "TypeScript", "ReactJS", "NextJS", "MongoDB"],
      "fullDescription": "A TypeScript-based CRUD application for managing data entries, allowing users to create, read, update, and delete records with an intuitive interface, real-time updates, and error handling.",
      "createdAt": "1722091716231",
      "updatedAt": "1722091716231",
      "linkDemo": "https://leaning-system.vercel.app/",
      "linkSource": "https://github.com/PinNguyen9x/Leaning-system",
      "shortDescription": "A TypeScript-based CRUD application for managing data entries, allowing users to create, read, update, and delete records with an intuitive interface, real-time updates, and error handling."
    },
    {
      "id": "f6470632-bfd8-4968-a9c6-2e359d3fb958",
      "title": "Json-Server",
      "status": "draft",
      "slug": "json-server",
      "frontEndTagList": ["ReactJS, TypeScript for UI development"],
      "backEndTagList": [
        "NodeJS for server-side development",
        "ExpressJS to configure routes and handle requests",
        "JWT to implement for authentication"
      ],
      "thumbnailUrl": "https://media.istockphoto.com/id/1903606349/photo/api-concept-application-programming-interface-connect-services-on-internet.webp?a=1&b=1&s=612x612&w=0&k=20&c=1Vjx3Fo2o5r8mOQxmujg0ddgSea_dj1tYmTTio150xA=",
      "tagList": ["TypeScript", "Faker", "ExpressJS", "NodeJS", "JWT"],
      "fullDescription": "The application API uses <span style=\"font-weight: 700; font-style: italic;\">json-server</span> to quickly simulate a RESTful API from a JSON file. It supports CRUD operations (Create, Read, Update, Delete) and is ideal for developing or testing web applications without a complex backend. It is easy to configure, flexible, and extensible, making it a powerful tool for prototyping, front-end integration, and rapid iteration. Additionally, it allows custom routes and middleware, offering greater control and adaptability for developers.",
      "createdAt": "1722091716231",
      "updatedAt": "1722091716231",
      "linkDemo": "https://json-server-blog.vercel.app/",
      "linkSource": "https://github.com/PinNguyen9x/json-server-blog",
      "shortDescription": "The application API uses <span style=\"font-weight: 700; font-style: italic;\">json-server</span> to quickly simulate a RESTful API from a JSON file. It supports CRUD operations (Create, Read, Update, Delete)."
    },
    {
      "id": "e09bf720-0989-445c-b0bb-457ec99c8dd8",
      "title": "Photo-albums",
      "status": "draft",
      "slug": "photo-albums",
      "frontEndTagList": [
        "TypeScript,ReactJS to handle UI development",
        "Vite as a build tool",
        "Tailwindcss for styling",
        "Redux for state management",
        "Firebase for authentication"
      ],
      "thumbnailUrl": "https://images.unsplash.com/photo-1500051638674-ff996a0ec29e?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8cGhvdG8lMjAlMjBhbGJ1bXN8ZW58MHx8MHx8fDA%3D",
      "tagList": ["TypeScript", "ReactJS", "Vite", "Tailwindcss", "Redux", "Firebase"],
      "fullDescription": "The <span style=\"font-weight: 700; font-style: italic;\">Photo-Albums</span> application allows users to manage personal photos by organizing them into albums. Users can create albums, add, delete photos, and fetch random images from the <span style=\"font-weight: 700; font-style: italic;\">Picsum</span> API. The interface is simple, providing an effective experience for managing and sharing photos.",
      "createdAt": "1722091716231",
      "updatedAt": "1722091716231",
      "linkDemo": "https://photo-app-rouge.vercel.app/photos",
      "linkSource": "https://github.com/PinNguyen9x/photo-app",
      "shortDescription": "The <span style=\"font-weight: 700; font-style: italic;\">Photo-Albums</span> application allows users to manage personal photos by organizing them into albums. Users can create albums, add, delete photos..."
    },
    {
      "id": "e85672df-975e-4813-bedb-68b3f1cb7c2b",
      "title": "Photo-Analysys",
      "status": "draft",
      "slug": "photo-analysys",
      "frontEndTagList": ["Python for back-end development", "Gradio library for UI development"],
      "thumbnailUrl": "https://media.istockphoto.com/id/1311598658/photo/businessman-trading-online-stock-market-on-teblet-screen-digital-investment-concept.webp?a=1&b=1&s=612x612&w=0&k=20&c=IWQzVeh6--ZOe9YxB1-EI1KSWooYTpZS2sqe6Zu6GJM=",
      "tagList": ["Python", "Gradio"],
      "fullDescription": "The <span style=\"font-weight: 700; font-style: italic;\">Photo-Analysis</span> application analyzes the content of uploaded images. It uses AI to detect and identify objects, scenes, and other visual elements within the photo. The app provides insights and descriptions, helping users understand the content through automated image analysis. Simple and efficient for content recognition tasks, it supports various image formats and delivers results quickly. Users can leverage this tool for applications such as photo cataloging, content moderation, or enhancing user experiences in digital platforms",
      "createdAt": "1722091716231",
      "updatedAt": "1722091716231",
      "linkDemo": "",
      "linkSource": "https://github.com/PinNguyen9x/photoanalysis",
      "shortDescription": "The <span style=\"font-weight: 700; font-style: italic;\">Photo-Analysis</span> application analyzes the content of uploaded images. It uses AI to detect and identify objects, scenes, and other visual elements within the photo."
    },
    {
      "id": "b136a089-8088-4be4-ba76-9abea7db9028",
      "title": "React-Query",
      "status": "draft",
      "slug": "react-query",
      "frontEndTagList": [
        "ReactJS, TypeScript for UI development",
        "Vite as a build tool",
        "Tailwindcss for styling components",
        "React Query for state management"
      ],
      "thumbnailUrl": "https://images.unsplash.com/photo-1633356122102-3fe601e05bd2?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8UmVhY3QlMjBRdWVyeXxlbnwwfHwwfHx8MA%3D%3D",
      "tagList": ["ReactJS", "TypeScript", "Vite", "Tailwindcss", "React Query"],
      "fullDescription": "The <span style=\"font-weight: 700; font-style: italic;\">Research React-Query</span> application demonstrates the usage of React Query for data fetching, caching, and synchronization in React applications.It showcases features like automatic updates, background refetching, and seamless state management, offering a robust solution for handling server-side data. The app includes practical examples and custom configurations, making it an excellent resource for developers exploring React Query's capabilities in real-world scenarios.",
      "createdAt": "1722091716231",
      "updatedAt": "1722091716231",
      "linkDemo": "",
      "linkSource": "",
      "shortDescription": "The <span style=\"font-weight: 700; font-style: italic;\">Research React-Query</span> application demonstrates the usage of React Query for data fetching, caching, and synchronization in React applications..."
    },
    {
      "id": "604356c6-13ea-4c2f-9211-66922785a3e8",
      "title": "AI-Chatbot",
      "status": "draft",
      "frontEndTagList": [
        "Gradio to build fast UI ChatBot application with Python",
        "ReactJS for UI development",
        "Vite as a build tool"
      ],
      "backEndTagList": ["Python"],
      "slug": "ai-chatbot",
      "thumbnailUrl": "https://plus.unsplash.com/premium_photo-1725907643567-1694c2737432?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NXx8YWklMjBjaGF0Ym90fGVufDB8fDB8fHww",
      "tagList": ["Python", "Gradio"],
      "fullDescription": "The <span style=\"font-weight: 700; font-style: italic;\">AI-Chatbot</span> application utilizes <span style=\"font-weight: 700; font-style: italic;\">OpenAI's</span> and <span style=\"font-weight: 700; font-style: italic;\">Claude's</span> chat APIs to provide intelligent, interactive conversations. It leverages AI to understand and respond to user inputs, offering personalized chatbot experiences.",
      "createdAt": "1722091716231",
      "updatedAt": "1722091716231",
      "linkDemo": "https://react-chat-bot-beige.vercel.app/",
      "linkSource": "https://github.com/PinNguyen9x/ReactChatBot",
      "shortDescription": "The <span style=\"font-weight: 700; font-style: italic;\">AI-Chatbot</span> application utilizes OpenAI's and Claude's chat APIs to provide intelligent, interactive conversations..."
    },
    {
      "id": "3a41ecc3-cd1f-4358-9fc0-2f1f14a97763",
      "title": "AI-Generate-Image",
      "status": "draft",
      "slug": "ai-generate-image",
      "thumbnailUrl": "https://plus.unsplash.com/premium_photo-1726556396492-de930dd1c9bd?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTN8fGFpJTIwY2hhdGJvdHxlbnwwfHwwfHx8MA%3D%3D",
      "tagList": ["Python", "Gradio", "Stable Diffusion", "ReactJS", "Vite"],
      "frontEndTagList": [
        "Gradio to build fast UI ChatBot application with Python",
        "ReactJS for UI development",
        "Vite as a build tool"
      ],
      "backEndTagList": [
        "Python for back-end development",
        "Stable Diffusion to config AI and generate image"
      ],
      "fullDescription": "The <span style=\"font-weight: 700; font-style: italic;\">AI-Generate-Image</span> application uses Stable Diffusion technology to create images from text prompts. It leverages AI to generate high-quality, customized visuals based on user input, enabling creative image generation.",
      "createdAt": "1722091716231",
      "updatedAt": "1722091716231",
      "linkDemo": "",
      "linkSource": "",
      "shortDescription": "The <span style=\"font-weight: 700; font-style: italic;\">AI-Generate-Image</span> application uses Stable Diffusion technology to create images from text prompts..."
    },
    {
      "id": "81206f0e-0f34-4f91-a907-9eff3f18b2d4",
      "title": "Frontend-Unit-Test",
      "status": "draft",
      "slug": "react-unit-test",
      "frontEndTagList": [
        "ReactJS for UI development",
        "Vite as a build tool",
        "React Testing Library for UI testing",
        "Jest for unit testing"
      ],
      "backEndTagList": [],
      "thumbnailUrl": "https://images.unsplash.com/photo-1593720217529-01f0a5d09aed?w=800&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1yZWxhdGVkfDExfHx8ZW58MHx8fHx8",
      "tagList": ["ReactJS", "Vite", "React Testing Library", "Jest"],
      "fullDescription": "The <span style=\"font-weight: 700; font-style: italic;\">Frontend-Unit-Test Research</span> application explores unit testing in React using <span style=\"font-weight: 700; font-style: italic;\">React Testing Library and Jest</span>. It focuses on writing and executing tests to ensure component functionality, promoting robust and maintainable frontend code.",
      "createdAt": "1722091716231",
      "updatedAt": "1722091716231",
      "linkDemo": "",
      "linkSource": "https://github.com/PinNguyen9x/React-UnitTest",
      "shortDescription": "The <span style=\"font-weight: 700; font-style: italic;\">Frontend-Unit-Test Research</span> application explores unit testing in React using **React Testing Library** and **Jest**..."
    }
  ],
  "tags": [
    "Python",
    "Gradio",
    "Stable Diffusion",
    "ReactJS",
    "Vite",
    "React Testing Library",
    "Jest",
    "NodeJS",
    "MongoDB",
    "Docker",
    "GitHub Action",
    "TypeScript",
    "Tailwindcss",
    "Redux",
    "Firebase",
    "JSON Server",
    "GitHub Action",
    "Faker",
    "ExpressJS",
    "NextJS",
    "React Query"
  ]
}
